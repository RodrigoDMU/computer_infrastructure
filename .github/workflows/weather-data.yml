name: Run Daily Weather Data

on:
  schedule:
    # Run at 10:00 AM UTC
    - cron: '0 10 * * *'
  workflow_dispatch:  # Allows manual triggering of the workflow

permissions:
  contents: write # Grant write permissions to push changes

jobs:
  run-weather:
    runs-on: ubuntu-latest  # Use Ubuntu VM

    steps:
    # Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Python 
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    # Set up bash and wget
    - name: Set up bash and wget
      run: sudo apt-get update && sudo apt-get install -y wget

    # Skip if current date is past 31st December 2024
    - name: Check date to stop after Dec 31, 2024
      run: |
        current_date=$(date +'%Y-%m-%d')
        end_date="2024-12-31"
        if [[ "$current_date" > "$end_date" ]]; then
          echo "The current date ($current_date) is past December 31, 2024. Exiting workflow."
          exit 0
        fi

    # Run the weather script
    - name: Run weather script
      run: bash weather.sh  # Corrected to run the script with bash

    # Commit and push the new weather data
    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
        # Fetch the latest changes from the remote main branch
        git fetch origin main

        # Check if there are changes in the weather data files
        if git diff --exit-code data/weather/*.json; then
          echo "No changes detected in the weather data."
          exit 0  # Exit the workflow if no changes
        fi

        # Add and commit the new weather data
        git add data/weather/*.json
        git commit -m "Update weather data for $(date +'%Y-%m-%d %H:%M:%S')"

        # Merge changes from remote main branch and push
        git pull origin main --rebase # Rebase instead of merge to avoid merge commits
        git push origin main  # Push the changes back to the repository